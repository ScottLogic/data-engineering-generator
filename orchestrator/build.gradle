plugins {
    id 'java'
}

group 'com.scottlogic.deg'
version 'unspecified'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(':profile')
    compile project(':generator')
    compile project(':common')

    compile group: 'info.picocli', name: 'picocli', version: '4.0.0-alpha-2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'io.cucumber:cucumber-core:4.0.0'
    testCompile 'io.cucumber:cucumber-junit:4.0.0'
    testCompile 'io.cucumber:cucumber-java:4.0.0'
    testCompile 'io.cucumber:cucumber-jvm:4.0.0'
    testCompile 'io.cucumber:gherkin:5.0.0'
    testCompile 'io.cucumber:cucumber-expressions:6.0.1'
    testCompile 'info.cukes:cucumber-picocontainer:1.2.5'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    
    testCompile project(':generator').sourceSets.test.output 
}

test {
    useJUnitPlatform()
}

description = 'DataHelix Generator'

task release(type: Jar) {
    manifest {
        attributes 'Created-By': 'Scott Logic',
            'Implementation-Version': version != null ? version : "0.0"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.scottlogic.deg.generator.App'
    }
    baseName = 'generator'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    archiveName = "${baseName}.${extension}"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.scottlogic.deg.generator.App'
    }
}